{
  "contractName": "UpgradeableBeacon",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x53bc600ee8f3aa5491211d6379556bbef66cca088d87d77837f1d7983969ca29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59102907e290f5dcd7e74370d653e5127a8e744603ae6a348a60144396c92cde\",\"dweb:/ipfs/Qmf8hc81ojRKRcx8Qi6TLKV1gJtm1KbY2aX4eK5KBxEJkJ\"]},\"project:/contracts/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xa94a1a9e3198be22338759729e826d0c6534bb17b6188136cc320bc85aeae1f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ff38409d9926b05d0c8022437767daa8e1d21ba6768e5903a3a362d397796e\",\"dweb:/ipfs/QmdQ8jG8jkT8YY9TcSw7ihGVo96X12sdm3teUBnVrfqu6w\"]},\"project:/contracts/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0xc021986ecfd86afc47779cbe44aefdf86cb62d835eb8c7411206acb22d906c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3a7f3ca5ceefc316d4a0504f900f1f3f2a3dc22ecd5a340a3a84a7a71aa7b63\",\"dweb:/ipfs/QmagDwTeuhrStBTmmsLWDBmGhYuFhfH8ybFBREfFcNpcGJ\"]},\"project:/contracts/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xc7fe4fa94d070341492a94a0dad622fec0926de3a28917ff8204c910137e5ee7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10c7032941aa803310e18f6e62b073b10353d1256d0d7d9c5b48c2f8f833d10\",\"dweb:/ipfs/Qmezdyr3PLF4nTpKZwfMhGNdeoyiiFknTsLTSKDS6nn71C\"]},\"project:/contracts/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf1a5f52ee72c20566bd22be8d5a980a07b0e1e6e210bc3544bf6575fdb8a897c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39acbed8d0dab2e55b9da2a6140360106d6e0bc525e3900f7dc9dba05bc84339\",\"dweb:/ipfs/QmPzyBFj6zxPiKTioLqGzZ1NtgBTXB8y4GoVUGSRQdTpgv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000a9138038062000a918339818101604052810190610034919061023d565b61005061004561006560201b60201c565b61006d60201b60201c565b61005f8161013160201b60201c565b5061030d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610144816101c760201b6103781760201c565b610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a906102ed565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080823b905060008111915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061020a826101df565b9050919050565b61021a816101ff565b811461022557600080fd5b50565b60008151905061023781610211565b92915050565b600060208284031215610253576102526101da565b5b600061026184828501610228565b91505092915050565b600082825260208201905092915050565b7f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60008201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000602082015250565b60006102d760338361026a565b91506102e28261027b565b604082019050919050565b60006020820190508181036000830152610306816102ca565b9050919050565b610774806200031d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610078578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b61007660048036038101906100719190610546565b6100da565b005b6100806101a5565b60405161008d9190610582565b60405180910390f35b61009e6101cf565b005b6100a8610257565b6040516100b59190610582565b60405180910390f35b6100d860048036038101906100d39190610546565b610280565b005b6100e261038b565b73ffffffffffffffffffffffffffffffffffffffff16610100610257565b73ffffffffffffffffffffffffffffffffffffffff1614610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906105fa565b60405180910390fd5b61015f81610393565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d761038b565b73ffffffffffffffffffffffffffffffffffffffff166101f5610257565b73ffffffffffffffffffffffffffffffffffffffff161461024b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610242906105fa565b60405180910390fd5b610255600061041f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61028861038b565b73ffffffffffffffffffffffffffffffffffffffff166102a6610257565b73ffffffffffffffffffffffffffffffffffffffff16146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f3906105fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561036c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103639061068c565b60405180910390fd5b6103758161041f565b50565b600080823b905060008111915050919050565b600033905090565b61039c81610378565b6103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d29061071e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610513826104e8565b9050919050565b61052381610508565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b60006020828403121561055c5761055b6104e3565b5b600061056a84828501610531565b91505092915050565b61057c81610508565b82525050565b60006020820190506105976000830184610573565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105e460208361059d565b91506105ef826105ae565b602082019050919050565b60006020820190508181036000830152610613816105d7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061067660268361059d565b91506106818261061a565b604082019050919050565b600060208201905081810360008301526106a581610669565b9050919050565b7f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60008201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000602082015250565b600061070860338361059d565b9150610713826106ac565b604082019050919050565b60006020820190508181036000830152610737816106fb565b905091905056fea2646970667358221220b34b307ba6d58af11508bec52e9fe4d16e7a484964b1b1bd0f246b74735c809864736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610078578063715018a6146100965780638da5cb5b146100a0578063f2fde38b146100be575b600080fd5b61007660048036038101906100719190610546565b6100da565b005b6100806101a5565b60405161008d9190610582565b60405180910390f35b61009e6101cf565b005b6100a8610257565b6040516100b59190610582565b60405180910390f35b6100d860048036038101906100d39190610546565b610280565b005b6100e261038b565b73ffffffffffffffffffffffffffffffffffffffff16610100610257565b73ffffffffffffffffffffffffffffffffffffffff1614610156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014d906105fa565b60405180910390fd5b61015f81610393565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d761038b565b73ffffffffffffffffffffffffffffffffffffffff166101f5610257565b73ffffffffffffffffffffffffffffffffffffffff161461024b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610242906105fa565b60405180910390fd5b610255600061041f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61028861038b565b73ffffffffffffffffffffffffffffffffffffffff166102a6610257565b73ffffffffffffffffffffffffffffffffffffffff16146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f3906105fa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561036c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103639061068c565b60405180910390fd5b6103758161041f565b50565b600080823b905060008111915050919050565b600033905090565b61039c81610378565b6103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d29061071e565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610513826104e8565b9050919050565b61052381610508565b811461052e57600080fd5b50565b6000813590506105408161051a565b92915050565b60006020828403121561055c5761055b6104e3565b5b600061056a84828501610531565b91505092915050565b61057c81610508565b82525050565b60006020820190506105976000830184610573565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006105e460208361059d565b91506105ef826105ae565b602082019050919050565b60006020820190508181036000830152610613816105d7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061067660268361059d565b91506106818261061a565b604082019050919050565b600060208201905081810360008301526106a581610669565b9050919050565b7f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60008201527f6e206973206e6f74206120636f6e747261637400000000000000000000000000602082015250565b600061070860338361059d565b9150610713826106ac565b604082019050919050565b60006020820190508181036000830152610737816106fb565b905091905056fea2646970667358221220b34b307ba6d58af11508bec52e9fe4d16e7a484964b1b1bd0f246b74735c809864736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2415:256",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:256",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:256",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:256"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:256"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:256",
                "type": ""
              }
            ],
            "src": "7:75:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:256",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:256",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:256"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:256",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:256",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:256"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:256",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:256"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:256"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:256",
                "type": ""
              }
            ],
            "src": "334:126:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:256"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:256"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:256"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:256",
                "type": ""
              }
            ],
            "src": "466:96:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:256",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:256",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:256",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:256",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:256"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:256"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:256"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:256"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:256"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:256"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:256"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:256"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:256"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:256"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:256",
                "type": ""
              }
            ],
            "src": "568:122:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:256"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:256"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:256"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:256"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:256",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:256",
                "type": ""
              }
            ],
            "src": "696:143:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:256",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:256",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:256"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:256"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:256"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:256"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:256"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:256"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:256"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:256",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:256",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:256",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:256",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:256",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:256"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:256"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:256"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:256"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:256"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:256"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:256",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:256",
                "type": ""
              }
            ],
            "src": "845:351:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1298:73:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1315:3:256"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1320:6:256"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1308:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1308:19:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1308:19:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1336:29:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1355:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1360:4:256",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1351:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:14:256"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1336:11:256"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1270:3:256",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1275:6:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1286:11:256",
                "type": ""
              }
            ],
            "src": "1202:169:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1483:132:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1505:6:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1513:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1501:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1501:14:256"
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1517:34:256",
                        "type": "",
                        "value": "UpgradeableBeacon: implementatio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1494:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1494:58:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1494:58:256"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1573:6:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1581:2:256",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1569:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1569:15:256"
                      },
                      {
                        "hexValue": "6e206973206e6f74206120636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1586:21:256",
                        "type": "",
                        "value": "n is not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1562:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:46:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1562:46:256"
                }
              ]
            },
            "name": "store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1475:6:256",
                "type": ""
              }
            ],
            "src": "1377:238:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1767:220:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1777:74:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1843:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1848:2:256",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1784:58:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:67:256"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1777:3:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1949:3:256"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                      "nodeType": "YulIdentifier",
                      "src": "1860:88:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1860:93:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1860:93:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1962:19:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1973:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:2:256",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1969:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1969:12:256"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1962:3:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1755:3:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1763:3:256",
                "type": ""
              }
            ],
            "src": "1621:366:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2164:248:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2174:26:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2186:9:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2182:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2182:18:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2174:4:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2221:9:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2232:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2217:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2217:17:256"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2240:4:256"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2246:9:256"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2236:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2236:20:256"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2210:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2210:47:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2210:47:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2266:139:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2400:4:256"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2274:124:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2274:131:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2266:4:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2144:9:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2159:4:256",
                "type": ""
              }
            ],
            "src": "1993:419:256"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"UpgradeableBeacon: implementatio\")\n\n        mstore(add(memPtr, 32), \"n is not a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 256,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4754:256",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:256",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:256",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:256"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:256"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:256",
                "type": ""
              }
            ],
            "src": "7:75:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:256",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:256",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:256"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:256",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:256",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:256"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:256",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:256"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:256"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:256",
                "type": ""
              }
            ],
            "src": "334:126:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:256"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:256"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:256"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:256",
                "type": ""
              }
            ],
            "src": "466:96:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:256",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:256",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:256",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:256",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:256"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:256"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:256"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:256"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:256"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:256"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:256"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:256"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:256"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:256"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:256",
                "type": ""
              }
            ],
            "src": "568:122:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:256"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:256"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:256"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:256"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:256",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:256",
                "type": ""
              }
            ],
            "src": "696:139:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:256",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:256",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:256"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:256"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:256"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:256"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:256"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:256"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:256"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:256",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:256",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:256",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:256",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:256",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:256"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:256"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:256"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:256"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:256"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:256"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:256",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:256",
                "type": ""
              }
            ],
            "src": "841:329:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1241:53:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1258:3:256"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1281:5:256"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1263:17:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1263:24:256"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:37:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:37:256"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:256",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1236:3:256",
                "type": ""
              }
            ],
            "src": "1176:118:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:124:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1408:26:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1420:9:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1431:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1416:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:18:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1408:4:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1488:6:256"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1501:9:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1512:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1497:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1497:17:256"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1444:43:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1444:71:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1444:71:256"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1370:9:256",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1382:6:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1393:4:256",
                "type": ""
              }
            ],
            "src": "1300:222:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1624:73:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1641:3:256"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1646:6:256"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1634:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:19:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1634:19:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1662:29:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1681:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1686:4:256",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1677:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1677:14:256"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1662:11:256"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1596:3:256",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1601:6:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1612:11:256",
                "type": ""
              }
            ],
            "src": "1528:169:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1809:76:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1831:6:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1839:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1827:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1827:14:256"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1843:34:256",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1820:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1820:58:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1820:58:256"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1801:6:256",
                "type": ""
              }
            ],
            "src": "1703:182:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2037:220:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2047:74:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2113:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2118:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2054:58:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2054:67:256"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2047:3:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2219:3:256"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "2130:88:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2130:93:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2130:93:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2232:19:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2243:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2248:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2239:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:12:256"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2232:3:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2025:3:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2033:3:256",
                "type": ""
              }
            ],
            "src": "1891:366:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2434:248:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2444:26:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2456:9:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2467:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2452:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2452:18:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2444:4:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2491:9:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2502:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2487:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2487:17:256"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2510:4:256"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2516:9:256"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2506:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2506:20:256"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2480:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2480:47:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2480:47:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2536:139:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2670:4:256"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2544:124:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:131:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2536:4:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2414:9:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2429:4:256",
                "type": ""
              }
            ],
            "src": "2263:419:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2794:119:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2816:6:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2824:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2812:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2812:14:256"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2828:34:256",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2805:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2805:58:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2805:58:256"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2884:6:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2892:2:256",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2880:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2880:15:256"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2897:8:256",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2873:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2873:33:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2873:33:256"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2786:6:256",
                "type": ""
              }
            ],
            "src": "2688:225:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3065:220:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3075:74:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3141:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3146:2:256",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3082:58:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3082:67:256"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3075:3:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3247:3:256"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "3158:88:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3158:93:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3158:93:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3260:19:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3271:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:2:256",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3267:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3267:12:256"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3260:3:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3053:3:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3061:3:256",
                "type": ""
              }
            ],
            "src": "2919:366:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3462:248:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3472:26:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3484:9:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3495:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3480:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3480:18:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3472:4:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3519:9:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3530:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3515:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3515:17:256"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3538:4:256"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3544:9:256"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3534:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3534:20:256"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3508:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3508:47:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3508:47:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3564:139:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3698:4:256"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3572:124:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3572:131:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3564:4:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3442:9:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3457:4:256",
                "type": ""
              }
            ],
            "src": "3291:419:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3822:132:256",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3844:6:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3852:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3840:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3840:14:256"
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3856:34:256",
                        "type": "",
                        "value": "UpgradeableBeacon: implementatio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3833:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:58:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3833:58:256"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3912:6:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:2:256",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3908:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3908:15:256"
                      },
                      {
                        "hexValue": "6e206973206e6f74206120636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3925:21:256",
                        "type": "",
                        "value": "n is not a contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3901:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:46:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3901:46:256"
                }
              ]
            },
            "name": "store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3814:6:256",
                "type": ""
              }
            ],
            "src": "3716:238:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4106:220:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4116:74:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4182:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4187:2:256",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4123:58:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4123:67:256"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4116:3:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4288:3:256"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                      "nodeType": "YulIdentifier",
                      "src": "4199:88:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4199:93:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4199:93:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4301:19:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4312:3:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4317:2:256",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4308:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4308:12:256"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4301:3:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4094:3:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4102:3:256",
                "type": ""
              }
            ],
            "src": "3960:366:256"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4503:248:256",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4513:26:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4525:9:256"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4536:2:256",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4521:3:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4521:18:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4513:4:256"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4560:9:256"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4571:1:256",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4556:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4556:17:256"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4579:4:256"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4585:9:256"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4575:3:256"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4575:20:256"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4549:6:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4549:47:256"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4549:47:256"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4605:139:256",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4739:4:256"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4613:124:256"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4613:131:256"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4605:4:256"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4483:9:256",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4498:4:256",
                "type": ""
              }
            ],
            "src": "4332:419:256"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"UpgradeableBeacon: implementatio\")\n\n        mstore(add(memPtr, 32), \"n is not a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 256,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "558:1545:173:-:0;;;958:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;949:32:4;968:12;:10;;;:12;;:::i;:::-;949:18;;;:32;;:::i;:::-;1006:35:173;1025:15;1006:18;;;:35;;:::i;:::-;958:91;558:1545;;656:98:226;709:7;736:10;729:17;;656:98;:::o;2340:191:4:-;2414:16;2433:6;;;;;;;;;;;2414:25;;2459:8;2450:6;;:17;;;;;;;;;;;;;;;;;;2514:8;2483:40;;2504:8;2483:40;;;;;;;;;;;;2403:128;2340:191;:::o;1871:229:173:-;1953:37;1972:17;1953:18;;;;;:37;;:::i;:::-;1945:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2075:17;2057:15;;:35;;;;;;;;;;;;;;;;;;1871:229;:::o;797:387:224:-;857:4;1065:12;1132:7;1120:20;1112:28;;1175:1;1168:4;:8;1161:15;;;797:387;;;:::o;88:117:256:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:238::-;1517:34;1513:1;1505:6;1501:14;1494:58;1586:21;1581:2;1573:6;1569:15;1562:46;1377:238;:::o;1621:366::-;1763:3;1784:67;1848:2;1843:3;1784:67;:::i;:::-;1777:74;;1860:93;1949:3;1860:93;:::i;:::-;1978:2;1973:3;1969:12;1962:19;;1621:366;;;:::o;1993:419::-;2159:4;2197:2;2186:9;2182:18;2174:26;;2246:9;2240:4;2236:20;2232:1;2221:9;2217:17;2210:47;2274:131;2400:4;2274:131;:::i;:::-;2266:139;;1993:419;;;:::o;558:1545:173:-;;;;;;;",
  "deployedSourceMap": "558:1545:173:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:170;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1132:114;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1721:103:4;;;:::i;:::-;;1070:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1979:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1517:170:173;1301:12:4;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:37:173::1;1618:17;1599:18;:37::i;:::-;1661:17;1652:27;;;;;;;;;;;;1517:170:::0;:::o;1132:114::-;1196:7;1223:15;;;;;;;;;;;1216:22;;1132:114;:::o;1721:103:4:-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1786:30:::1;1813:1;1786:18;:30::i;:::-;1721:103::o:0;1070:87::-;1116:7;1143:6;;;;;;;;;;;1136:13;;1070:87;:::o;1979:201::-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2088:1:::1;2068:22;;:8;:22;;;;2060:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2144:28;2163:8;2144:18;:28::i;:::-;1979:201:::0;:::o;797:387:224:-;857:4;1065:12;1132:7;1120:20;1112:28;;1175:1;1168:4;:8;1161:15;;;797:387;;;:::o;656:98:226:-;709:7;736:10;729:17;;656:98;:::o;1871:229:173:-;1953:37;1972:17;1953:18;:37::i;:::-;1945:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2075:17;2057:15;;:35;;;;;;;;;;;;;;;;;;1871:229;:::o;2340:191:4:-;2414:16;2433:6;;;;;;;;;;;2414:25;;2459:8;2450:6;;:17;;;;;;;;;;;;;;;;;;2514:8;2483:40;;2504:8;2483:40;;;;;;;;;;;;2403:128;2340:191;:::o;88:117:256:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:182::-;1843:34;1839:1;1831:6;1827:14;1820:58;1703:182;:::o;1891:366::-;2033:3;2054:67;2118:2;2113:3;2054:67;:::i;:::-;2047:74;;2130:93;2219:3;2130:93;:::i;:::-;2248:2;2243:3;2239:12;2232:19;;1891:366;;;:::o;2263:419::-;2429:4;2467:2;2456:9;2452:18;2444:26;;2516:9;2510:4;2506:20;2502:1;2491:9;2487:17;2480:47;2544:131;2670:4;2544:131;:::i;:::-;2536:139;;2263:419;;;:::o;2688:225::-;2828:34;2824:1;2816:6;2812:14;2805:58;2897:8;2892:2;2884:6;2880:15;2873:33;2688:225;:::o;2919:366::-;3061:3;3082:67;3146:2;3141:3;3082:67;:::i;:::-;3075:74;;3158:93;3247:3;3158:93;:::i;:::-;3276:2;3271:3;3267:12;3260:19;;2919:366;;;:::o;3291:419::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3544:9;3538:4;3534:20;3530:1;3519:9;3515:17;3508:47;3572:131;3698:4;3572:131;:::i;:::-;3564:139;;3291:419;;;:::o;3716:238::-;3856:34;3852:1;3844:6;3840:14;3833:58;3925:21;3920:2;3912:6;3908:15;3901:46;3716:238;:::o;3960:366::-;4102:3;4123:67;4187:2;4182:3;4123:67;:::i;:::-;4116:74;;4199:93;4288:3;4199:93;:::i;:::-;4317:2;4312:3;4308:12;4301:19;;3960:366;;;:::o;4332:419::-;4498:4;4536:2;4525:9;4521:18;4513:26;;4585:9;4579:4;4575:20;4571:1;4560:9;4556:17;4549:47;4613:131;4739:4;4613:131;:::i;:::-;4605:139;;4332:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.0 (proxy/beacon/UpgradeableBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IBeacon.sol\";\r\nimport \"../../access/Ownable.sol\";\r\nimport \"../../utils/Address.sol\";\r\n\r\n/**\r\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\r\n * implementation contract, which is where they will delegate all function calls.\r\n *\r\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\r\n */\r\ncontract UpgradeableBeacon is IBeacon, Ownable {\r\n    address private _implementation;\r\n\r\n    /**\r\n     * @dev Emitted when the implementation returned by the beacon is changed.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\r\n     * beacon.\r\n     */\r\n    constructor(address implementation_) {\r\n        _setImplementation(implementation_);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function implementation() public view virtual override returns (address) {\r\n        return _implementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades the beacon to a new implementation.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - msg.sender must be the owner of the contract.\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the implementation contract address for this beacon\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\r\n        _implementation = newImplementation;\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Blockchain\\MetaScence\\contracts\\@openzeppelin\\contracts\\proxy\\beacon\\UpgradeableBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        15893
      ],
      "Context": [
        16000
      ],
      "IBeacon": [
        7118
      ],
      "Ownable": [
        636
      ],
      "UpgradeableBeacon": [
        7193
      ]
    },
    "id": 7194,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7120,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "106:23:173"
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 7121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7194,
        "sourceUnit": 7119,
        "src": "133:23:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 7122,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7194,
        "sourceUnit": 637,
        "src": "158:34:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 7123,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7194,
        "sourceUnit": 15894,
        "src": "194:33:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7125,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7118,
              "src": "588:7:173"
            },
            "id": 7126,
            "nodeType": "InheritanceSpecifier",
            "src": "588:7:173"
          },
          {
            "baseName": {
              "id": 7127,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 636,
              "src": "597:7:173"
            },
            "id": 7128,
            "nodeType": "InheritanceSpecifier",
            "src": "597:7:173"
          }
        ],
        "canonicalName": "UpgradeableBeacon",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7124,
          "nodeType": "StructuredDocumentation",
          "src": "231:325:173",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 7193,
        "linearizedBaseContracts": [
          7193,
          636,
          16000,
          7118
        ],
        "name": "UpgradeableBeacon",
        "nameLocation": "567:17:173",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7130,
            "mutability": "mutable",
            "name": "_implementation",
            "nameLocation": "628:15:173",
            "nodeType": "VariableDeclaration",
            "scope": 7193,
            "src": "612:31:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7129,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "612:7:173",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7131,
              "nodeType": "StructuredDocumentation",
              "src": "652:92:173",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 7135,
            "name": "Upgraded",
            "nameLocation": "756:8:173",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7133,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "781:14:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "765:30:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "764:32:173"
            },
            "src": "750:47:173"
          },
          {
            "body": {
              "id": 7145,
              "nodeType": "Block",
              "src": "995:54:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7142,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7138,
                        "src": "1025:15:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7141,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7192,
                      "src": "1006:18:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:35:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7144,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:35:173"
                }
              ]
            },
            "documentation": {
              "id": 7136,
              "nodeType": "StructuredDocumentation",
              "src": "805:147:173",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 7146,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7138,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "978:15:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7146,
                  "src": "970:23:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "969:25:173"
            },
            "returnParameters": {
              "id": 7140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:0:173"
            },
            "scope": 7193,
            "src": "958:91:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7117
            ],
            "body": {
              "id": 7155,
              "nodeType": "Block",
              "src": "1205:41:173",
              "statements": [
                {
                  "expression": {
                    "id": 7153,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7130,
                    "src": "1223:15:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7152,
                  "id": 7154,
                  "nodeType": "Return",
                  "src": "1216:22:173"
                }
              ]
            },
            "documentation": {
              "id": 7147,
              "nodeType": "StructuredDocumentation",
              "src": "1057:69:173",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 7156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "1141:14:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7149,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1178:8:173"
            },
            "parameters": {
              "id": 7148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:2:173"
            },
            "returnParameters": {
              "id": 7152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7156,
                  "src": "1196:7:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1195:9:173"
            },
            "scope": 7193,
            "src": "1132:114:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7172,
              "nodeType": "Block",
              "src": "1588:99:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7165,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7159,
                        "src": "1618:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7164,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7192,
                      "src": "1599:18:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:37:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7167,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:37:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7169,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7159,
                        "src": "1661:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7168,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "1652:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:27:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7171,
                  "nodeType": "EmitStatement",
                  "src": "1647:32:173"
                }
              ]
            },
            "documentation": {
              "id": 7157,
              "nodeType": "StructuredDocumentation",
              "src": "1254:257:173",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 7173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7161,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 578,
                  "src": "1578:9:173"
                },
                "nodeType": "ModifierInvocation",
                "src": "1578:9:173"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "1526:9:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7159,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1544:17:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7173,
                  "src": "1536:25:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:27:173"
            },
            "returnParameters": {
              "id": 7163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:0:173"
            },
            "scope": 7193,
            "src": "1517:170:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7191,
              "nodeType": "Block",
              "src": "1934:166:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7182,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7176,
                            "src": "1972:17:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7180,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15893,
                            "src": "1953:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$15893_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 7181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15616,
                          "src": "1953:18:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 7183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1953:37:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 7184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1992:53:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 7179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1945:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:101:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7186,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:101:173"
                },
                {
                  "expression": {
                    "id": 7189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7187,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7130,
                      "src": "2057:15:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7188,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7176,
                      "src": "2075:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2057:35:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7190,
                  "nodeType": "ExpressionStatement",
                  "src": "2057:35:173"
                }
              ]
            },
            "documentation": {
              "id": 7174,
              "nodeType": "StructuredDocumentation",
              "src": "1695:170:173",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 7192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nameLocation": "1880:18:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7176,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1907:17:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7192,
                  "src": "1899:25:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1898:27:173"
            },
            "returnParameters": {
              "id": 7178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1934:0:173"
            },
            "scope": 7193,
            "src": "1871:229:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 7194,
        "src": "558:1545:173",
        "usedErrors": []
      }
    ],
    "src": "106:1999:173"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol",
    "exportedSymbols": {
      "Address": [
        15893
      ],
      "Context": [
        16000
      ],
      "IBeacon": [
        7118
      ],
      "Ownable": [
        636
      ],
      "UpgradeableBeacon": [
        7193
      ]
    },
    "id": 7194,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7120,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "106:23:173"
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 7121,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7194,
        "sourceUnit": 7119,
        "src": "133:23:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 7122,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7194,
        "sourceUnit": 637,
        "src": "158:34:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/@openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 7123,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7194,
        "sourceUnit": 15894,
        "src": "194:33:173",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7125,
              "name": "IBeacon",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7118,
              "src": "588:7:173"
            },
            "id": 7126,
            "nodeType": "InheritanceSpecifier",
            "src": "588:7:173"
          },
          {
            "baseName": {
              "id": 7127,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 636,
              "src": "597:7:173"
            },
            "id": 7128,
            "nodeType": "InheritanceSpecifier",
            "src": "597:7:173"
          }
        ],
        "canonicalName": "UpgradeableBeacon",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7124,
          "nodeType": "StructuredDocumentation",
          "src": "231:325:173",
          "text": " @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n implementation contract, which is where they will delegate all function calls.\n An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon."
        },
        "fullyImplemented": true,
        "id": 7193,
        "linearizedBaseContracts": [
          7193,
          636,
          16000,
          7118
        ],
        "name": "UpgradeableBeacon",
        "nameLocation": "567:17:173",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7130,
            "mutability": "mutable",
            "name": "_implementation",
            "nameLocation": "628:15:173",
            "nodeType": "VariableDeclaration",
            "scope": 7193,
            "src": "612:31:173",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7129,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "612:7:173",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7131,
              "nodeType": "StructuredDocumentation",
              "src": "652:92:173",
              "text": " @dev Emitted when the implementation returned by the beacon is changed."
            },
            "id": 7135,
            "name": "Upgraded",
            "nameLocation": "756:8:173",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7133,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "781:14:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7135,
                  "src": "765:30:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "764:32:173"
            },
            "src": "750:47:173"
          },
          {
            "body": {
              "id": 7145,
              "nodeType": "Block",
              "src": "995:54:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7142,
                        "name": "implementation_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7138,
                        "src": "1025:15:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7141,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7192,
                      "src": "1006:18:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:35:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7144,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:35:173"
                }
              ]
            },
            "documentation": {
              "id": 7136,
              "nodeType": "StructuredDocumentation",
              "src": "805:147:173",
              "text": " @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n beacon."
            },
            "id": 7146,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7138,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "978:15:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7146,
                  "src": "970:23:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "969:25:173"
            },
            "returnParameters": {
              "id": 7140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:0:173"
            },
            "scope": 7193,
            "src": "958:91:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              7117
            ],
            "body": {
              "id": 7155,
              "nodeType": "Block",
              "src": "1205:41:173",
              "statements": [
                {
                  "expression": {
                    "id": 7153,
                    "name": "_implementation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7130,
                    "src": "1223:15:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7152,
                  "id": 7154,
                  "nodeType": "Return",
                  "src": "1216:22:173"
                }
              ]
            },
            "documentation": {
              "id": 7147,
              "nodeType": "StructuredDocumentation",
              "src": "1057:69:173",
              "text": " @dev Returns the current implementation address."
            },
            "functionSelector": "5c60da1b",
            "id": 7156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "1141:14:173",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7149,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1178:8:173"
            },
            "parameters": {
              "id": 7148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:2:173"
            },
            "returnParameters": {
              "id": 7152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7156,
                  "src": "1196:7:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1195:9:173"
            },
            "scope": 7193,
            "src": "1132:114:173",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7172,
              "nodeType": "Block",
              "src": "1588:99:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7165,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7159,
                        "src": "1618:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7164,
                      "name": "_setImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7192,
                      "src": "1599:18:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:37:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7167,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:37:173"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7169,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7159,
                        "src": "1661:17:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7168,
                      "name": "Upgraded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7135,
                      "src": "1652:8:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1652:27:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7171,
                  "nodeType": "EmitStatement",
                  "src": "1647:32:173"
                }
              ]
            },
            "documentation": {
              "id": 7157,
              "nodeType": "StructuredDocumentation",
              "src": "1254:257:173",
              "text": " @dev Upgrades the beacon to a new implementation.\n Emits an {Upgraded} event.\n Requirements:\n - msg.sender must be the owner of the contract.\n - `newImplementation` must be a contract."
            },
            "functionSelector": "3659cfe6",
            "id": 7173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7162,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7161,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 578,
                  "src": "1578:9:173"
                },
                "nodeType": "ModifierInvocation",
                "src": "1578:9:173"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "1526:9:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7159,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1544:17:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7173,
                  "src": "1536:25:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:27:173"
            },
            "returnParameters": {
              "id": 7163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:0:173"
            },
            "scope": 7193,
            "src": "1517:170:173",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7191,
              "nodeType": "Block",
              "src": "1934:166:173",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 7182,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7176,
                            "src": "1972:17:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 7180,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15893,
                            "src": "1953:7:173",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$15893_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 7181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15616,
                          "src": "1953:18:173",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 7183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1953:37:173",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 7184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1992:53:173",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        },
                        "value": "UpgradeableBeacon: implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ccca6b0666a32006e874c0f8fc30910124098b6e8e91ea2ea1baa45ce41f1e6",
                          "typeString": "literal_string \"UpgradeableBeacon: implementation is not a contract\""
                        }
                      ],
                      "id": 7179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1945:7:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:101:173",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7186,
                  "nodeType": "ExpressionStatement",
                  "src": "1945:101:173"
                },
                {
                  "expression": {
                    "id": 7189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7187,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7130,
                      "src": "2057:15:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7188,
                      "name": "newImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7176,
                      "src": "2075:17:173",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2057:35:173",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7190,
                  "nodeType": "ExpressionStatement",
                  "src": "2057:35:173"
                }
              ]
            },
            "documentation": {
              "id": 7174,
              "nodeType": "StructuredDocumentation",
              "src": "1695:170:173",
              "text": " @dev Sets the implementation contract address for this beacon\n Requirements:\n - `newImplementation` must be a contract."
            },
            "id": 7192,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setImplementation",
            "nameLocation": "1880:18:173",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7176,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "1907:17:173",
                  "nodeType": "VariableDeclaration",
                  "scope": 7192,
                  "src": "1899:25:173",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1899:7:173",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1898:27:173"
            },
            "returnParameters": {
              "id": 7178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1934:0:173"
            },
            "scope": 7193,
            "src": "1871:229:173",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 7194,
        "src": "558:1545:173",
        "usedErrors": []
      }
    ],
    "src": "106:1999:173"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-16T04:20:05.841Z",
  "devdoc": {
    "details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
    "events": {
      "Upgraded(address)": {
        "details": "Emitted when the implementation returned by the beacon is changed."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
      },
      "implementation()": {
        "details": "Returns the current implementation address."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "upgradeTo(address)": {
        "details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}