{
  "contractName": "IBeacon",
  "abi": [
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xa94a1a9e3198be22338759729e826d0c6534bb17b6188136cc320bc85aeae1f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ff38409d9926b05d0c8022437767daa8e1d21ba6768e5903a3a362d397796e\",\"dweb:/ipfs/QmdQ8jG8jkT8YY9TcSw7ihGVo96X12sdm3teUBnVrfqu6w\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.0 (proxy/beacon/IBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\r\n */\r\ninterface IBeacon {\r\n    /**\r\n     * @dev Must return an address that can be used as a delegate call target.\r\n     *\r\n     * {BeaconProxy} will check that this address is a contract.\r\n     */\r\n    function implementation() external view returns (address);\r\n}\r\n",
  "sourcePath": "D:\\Blockchain\\MetaScence\\contracts\\@openzeppelin\\contracts\\proxy\\beacon\\IBeacon.sol",
  "ast": {
    "absolutePath": "project:/contracts/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
    "exportedSymbols": {
      "IBeacon": [
        7118
      ]
    },
    "id": 7119,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7110,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "96:23:172"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBeacon",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7111,
          "nodeType": "StructuredDocumentation",
          "src": "123:81:172",
          "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
        },
        "fullyImplemented": false,
        "id": 7118,
        "linearizedBaseContracts": [
          7118
        ],
        "name": "IBeacon",
        "nameLocation": "216:7:172",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 7112,
              "nodeType": "StructuredDocumentation",
              "src": "231:166:172",
              "text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
            },
            "functionSelector": "5c60da1b",
            "id": 7117,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "412:14:172",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:2:172"
            },
            "returnParameters": {
              "id": 7116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7117,
                  "src": "452:7:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:172",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "451:9:172"
            },
            "scope": 7118,
            "src": "403:58:172",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7119,
        "src": "206:258:172",
        "usedErrors": []
      }
    ],
    "src": "96:370:172"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
    "exportedSymbols": {
      "IBeacon": [
        7118
      ]
    },
    "id": 7119,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7110,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "96:23:172"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IBeacon",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 7111,
          "nodeType": "StructuredDocumentation",
          "src": "123:81:172",
          "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
        },
        "fullyImplemented": false,
        "id": 7118,
        "linearizedBaseContracts": [
          7118
        ],
        "name": "IBeacon",
        "nameLocation": "216:7:172",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 7112,
              "nodeType": "StructuredDocumentation",
              "src": "231:166:172",
              "text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
            },
            "functionSelector": "5c60da1b",
            "id": 7117,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "412:14:172",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:2:172"
            },
            "returnParameters": {
              "id": 7116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7117,
                  "src": "452:7:172",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:172",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "451:9:172"
            },
            "scope": 7118,
            "src": "403:58:172",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7119,
        "src": "206:258:172",
        "usedErrors": []
      }
    ],
    "src": "96:370:172"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-16T04:20:05.840Z",
  "devdoc": {
    "details": "This is the interface that {BeaconProxy} expects of its beacon.",
    "kind": "dev",
    "methods": {
      "implementation()": {
        "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}